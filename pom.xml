<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.semispace</groupId>
    <artifactId>semispace</artifactId>
    <packaging>pom</packaging>
    <version>2.0.0-SNAPSHOT</version>
    <name>semispace</name>
    <description>SemiSpace is a light weight distributed JavaSpaces inspired tuple space which is easy to integrate with
        existing technology.
    </description>
    <inceptionYear>2008</inceptionYear>
    <url>http://www.semispace.org/semispace</url>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>en</id>
            <name>Erlend Nossum</name>
            <roles>
                <role>Project lead</role>
            </roles>
        </developer>
        <developer>
            <id>trygve</id>
            <name>Trygve Lie</name>
        </developer>
        <developer>
            <id>chris</id>
            <name>Chris Mcfarlen</name>
        </developer>
    </developers>

    <scm>
        <connection>scm:git:ssh://git@github.com/nostra/semispace.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/nostra/semispace.git</developerConnection>
        <url>git@github.com:nostra/semispace.git</url>
    </scm>

    <properties>
        <slf4j.version>1.7.36</slf4j.version>
        <!-- TODO: Later upgrade past 1.4.17. Cannot at the moment as it needs insecure vm setting -->
        <xstream.version>1.4.17</xstream.version>
        <maven-javadoc-plugin.version>3.4.0</maven-javadoc-plugin.version>
        <asciidoctor.version>2.2.2</asciidoctor.version>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <file.encoding>UTF-8</file.encoding>

        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <logback-classic.version>1.2.11</logback-classic.version>
        <xpp3_min.version>1.1.4c</xpp3_min.version>
        <wagon-ssh-external.version>3.5.2</wagon-ssh-external.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-release-plugin.version>2.5.2</maven-release-plugin.version>
        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
        <doxia-maven-plugin.version>1.2</doxia-maven-plugin.version>
        <doxia-module-xdoc.version>1.11.1</doxia-module-xdoc.version>
        <doxia-module-markdown.version>${doxia-module-xdoc.version}</doxia-module-markdown.version>
        <maven-enforcer-plugin.version>3.1.0</maven-enforcer-plugin.version>
        <junit-jupiter.version>5.8.2</junit-jupiter.version>
        <maven-scm-provider-gitexe.version>1.13.0</maven-scm-provider-gitexe.version>
        <java.version>1.${java.compiler.version}</java.version>
        <java.compiler.version>17</java.compiler.version>
    </properties>

    <!--
        DEPENDENCIES
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
            </dependency>

            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>

            <!--START SNIPPET: xpp3Dependency -->
            <dependency>
                <groupId>xpp3</groupId>
                <artifactId>xpp3_min</artifactId>
                <version>${xpp3_min.version}</version>
            </dependency>
            <!--END SNIPPET: xpp3Dependency -->


            <!-- Drop-in replacement for commons logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback-classic.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--
        BUILD
    -->
    <build>
        <extensions>
            <!-- maven3 will need wagon-ssh extension in order to be able to release,
            Using external variant in order to retain keys, etc -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>${wagon-ssh-external.version}</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <javadocVersion>1.8</javadocVersion>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <!--runOrder>random</runOrder-->
                        <!--properties>
                            <property>
                                <name>listener</name>
                                <value>org.sonar.java.jacoco.JUnitListener</value>
                            </property>
                        </properties-->
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${asciidoctor.version}</version>
                    <executions>
                        <execution>
                            <id>asciidoctor-html</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>process-asciidoc</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.compiler.version}</source>
                        <target>${java.compiler.version}</target>
                        <encoding>UTF-8</encoding>
                        <compilerArgs>
                            <!--arg>-Werror</arg-->
                            <arg>-Xlint:all</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.scm</groupId>
                            <artifactId>maven-scm-provider-gitexe</artifactId>
                            <version>${maven-scm-provider-gitexe.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6.1</version>
                                </requireMavenVersion>
                                <dependencyConvergence/>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <append>true</append>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>

            </plugin>
        </plugins>
    </build>

    <!-- 
        REPORTING
    -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <!-- Trying to create doc java-1.8 only -->
                    <javadocVersion>${java.version}</javadocVersion>
                    <minmemory>128m</minmemory>
                    <maxmemory>768m</maxmemory>
                    <breakiterator>true</breakiterator>
                    <useStandardDocletOptions>true</useStandardDocletOptions>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    <breakiterator>true</breakiterator>
                    <version>true</version>
                    <author>true</author>
                    <keywords>true</keywords>
                </configuration>

            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <!--TODO Add and fix version <version>3.3.0</version>-->
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>buildWithIntegrationTests</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>integration</value>
                </property>
            </activation>
            <properties>
                <tests.to.exclude>do.not.exclude.any.tests</tests.to.exclude>
            </properties>
        </profile>

        <profile>
            <id>buildWithNoTests</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>dev</value>
                </property>
            </activation>
            <properties>
                <tests.to.exclude>*Test.java</tests.to.exclude>
            </properties>
        </profile>

        <profile>
            <id>buildWithOnlyRegularTests</id>
            <activation>
                <property>
                    <name>env</name>
                    <value>test</value>
                </property>
            </activation>
            <properties>
                <tests.to.exclude>*IntegrationTest.java</tests.to.exclude>
            </properties>
        </profile>
    </profiles>

    <!-- 
        MODULES
    -->
    <modules>
        <module>semispace-main</module>
    </modules>

</project>
